name: Deploy vue_liquid_glass to Pages

# 让 GITHUB_TOKEN 具备写权限，才能 push 回 main
permissions:
  contents: write

on:
  push:
    branches: [ main ]
    paths:
      - 'archive/vue_liquid_glass/**'
      - '.github/workflows/workflow.yml'
  workflow_dispatch:

jobs:
  build-and-deploy:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest

    # 所有 shell 命令默认在子目录执行
    defaults:
      run:
        working-directory: archive/vue_liquid_glass

    steps:
      # 1. 克隆仓库（可写凭证）
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2. Node 环境 + npm 缓存
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: archive/vue_liquid_glass/package-lock.json

      # 3. 安装依赖
      - name: Install dependencies
        run: npm ci

      # 4. 删除旧构建，避免散列引用冲突
      - name: Clean previous build output
        run: |
          rm -rf assets index.html

      # 5. 复制缺失的 shader-worker 到 public/assets
      - name: Copy shader workers to public/assets
        run: |
          mkdir -p public/assets
          cp node_modules/@wxperia/liquid-glass-vue/dist/assets/*.js public/assets/ || true

      # 6. 重新构建
      - name: Build project
        run: npm run build

      # 7. 用新产物覆盖源码目录
      - name: Replace source with build output
        run: |
          cp -r dist/* .
          rm -rf dist
          touch .nojekyll

      # 8. 提交并推回 main（仅当文件有变动）
      - name: Commit & push if changed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "ci: auto-deploy vue_liquid_glass [skip ci]"
            git push origin main
          fi
